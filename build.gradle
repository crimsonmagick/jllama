import static org.gradle.internal.os.OperatingSystem.current

group 'net.jllama'
version '0.0.1-SNAPSHOT'

task runProgram(type: JavaExec) {
    description = 'Runs the main program'
    group = 'application'

    dependsOn ':test-runner:build'
    mainClass = 'net.jllama.llama.cpp.java.bindings.runner.Main'
    systemProperty 'java.library.path', projectDir as String + '/jni-implementation/build/cmake/main/cpp'
    systemProperty "modelpath", System.getProperty("modelpath")
    systemProperty "loglevel", System.getProperty("loglevel")

    final llamaRelativePath = current().isWindows() ? '/jni-implementation/build/cmake/bin/Release'
            : '/jni-implementation/build/cmake/external/llama.cpp'


    final String llamaAbsolutePath = projectDir as String + llamaRelativePath

    final envVariableName = current().isWindows() ? 'PATH' :
            current().isMacOsX() ? 'DYLD_LIBRARY_PATH' : 'LD_LIBRARY_PATH'
    final envVariableValue = System.getenv(envVariableName) ? System.getenv(envVariableName) : ''
    environment envVariableName, "${envVariableValue}${File.pathSeparator}${llamaAbsolutePath}"

    doFirst {
        classpath = files(project(':test-runner').sourceSets.main.runtimeClasspath)
    }
}