import static org.gradle.internal.os.OperatingSystem.current

group 'net.jllama'
version '0.0.1-SNAPSHOT'

task runProgram(type: JavaExec) {
    description = 'Runs the main program'
    group = 'application'

    dependsOn ':jni-bindings:build', ':jni-implementation:build'
    mainClass = 'net.jllama.llama.cpp.java.bindings.runner.Main'
    systemProperty 'java.library.path', 'jni-implementation/build/lib/main/debug'
//    systemProperty 'java.library.path', 'jni-implementation/build/cmake/main/cpp/Debug'
    systemProperty "modelpath", System.getProperty("modelpath")
    systemProperty "loglevel", System.getProperty("loglevel")

    final llamaRelativePath = current().isWindows() ? '/jni-implementation/build/cmake/bin/Release'
            : '/jni-implementation/build/cmake/Release'
    final String llamaAbsolutePath = projectDir as String + llamaRelativePath

    final envVariableName = current().isWindows() ? 'PATH' :
            current().isMacOsX() ? 'DYLD_LIBRARY_PATH' : 'LD_LIBRARY_PATH'
    final envVariableValue = System.getenv(envVariableName) ? System.getenv(envVariableName) : ''
    environment envVariableName, "${envVariableValue}${File.pathSeparator}${llamaAbsolutePath}"

    doFirst {
        classpath = files(project(':jni-bindings').sourceSets.main.runtimeClasspath)
    }
}

subprojects { project ->
    apply plugin: 'maven-publish'

    publishing {
        publications {
            maven(MavenPublication) {
                if (project.plugins.hasPlugin('java')) {
                    from components.java
                } else if (project.plugins.hasPlugin('cpp-library')) {
                    from components.main
                }

                // Your shared POM configuration goes here
                pom {
                    name = 'Jllama CPP Bindings'
                    description = 'Provides Java bindings to the Llama CPP library'
                    url = 'https://github.com/crimsonmagick/llama-cpp-java-bindings'
                    licenses {
                        license {
                            name = 'The MIT License'
                            url = 'https://opensource.org/licenses/MIT'
                        }
                    }
                    developers {
                        developer {
                            id = 'crimsonmagick'
                            name = 'Welby Seely'
                            email = 'welbyseely@email.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:https://github.com/crimsonmagick/llama-cpp-java-bindings.git'
                        developerConnection = 'scm:git:ssh://github.com/crimsonmagick/llama-cpp-java-bindings.git'
                        url = 'https://github.com/username/crimsonmagick'
                    }
                }
            }
        }
        repositories {
            mavenLocal()
        }
    }
}

