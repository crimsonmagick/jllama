plugins {
    id 'java'
    id 'maven-publish'
}

dependencies {
    implementation 'org.apache.logging.log4j:log4j-api:2.22.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenLocal()
    mavenCentral()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            artifact(sourceJar) {
                classifier = 'sources'
            }

            pom {
                name = 'jLlama CPP Bindings'
                description = 'Provides Java bindings to the Llama CPP library'
                url = 'https://github.com/crimsonmagick/llama-cpp-java-bindings'
                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'crimsonmagick'
                        name = 'Welby Seely'
                        email = 'welbyseely@email.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/crimsonmagick/llama-cpp-java-bindings.git'
                    developerConnection = 'scm:git:ssh://github.com/crimsonmagick/llama-cpp-java-bindings.git'
                    url = 'https://github.com/username/crimsonmagick'
                }
            }
        }
    }
    repositories {
        mavenLocal()
        maven {
            name = 'OSSRH'
            url = version.endsWith('SNAPSHOT') ?
              'https://s01.oss.sonatype.org/content/repositories/snapshots/' :
              'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username = System.hasProperty("OSSRH_TOKEN_KEY") ? System.getProperty("OSSRH_TOKEN_KEY") : System.getenv("OSSRH_TOKEN_KEY")
                password = System.hasProperty("OSSHR_TOKEN_PASSWORD") ? System.getProperty("OSSRH_TOKEN_PASSWORD") : System.getenv("OSSRH_TOKEN_PASSWORD")
            }
        }
    }
}
